# Script de verifica√ß√£o da configura√ß√£o do Supabase Storage
# Execute este script para verificar se tudo est√° funcionando

Write-Host "üîç Verificando configura√ß√£o do Supabase Storage..." -ForegroundColor Green

# Verificar se o Supabase CLI est√° instalado
try {
    $supabaseVersion = supabase --version
    Write-Host "‚úÖ Supabase CLI: $supabaseVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Supabase CLI n√£o encontrado" -ForegroundColor Red
    exit 1
}

# Verificar conex√£o com o projeto
try {
    $status = supabase status
    Write-Host "‚úÖ Conectado ao projeto Supabase" -ForegroundColor Green
} catch {
    Write-Host "‚ùå N√£o conectado ao projeto" -ForegroundColor Red
    Write-Host "Execute: supabase link --project-ref seu-project-ref" -ForegroundColor Yellow
    exit 1
}

# Listar buckets existentes
Write-Host "üì¶ Verificando buckets..." -ForegroundColor Cyan
try {
    $buckets = supabase storage list
    Write-Host "‚úÖ Buckets encontrados:" -ForegroundColor Green
    
    if ($buckets -match "public-images") {
        Write-Host "   ‚úÖ public-images (p√∫blico)" -ForegroundColor Green
    } else {
        Write-Host "   ‚ùå public-images n√£o encontrado" -ForegroundColor Red
    }
    
    if ($buckets -match "private-images") {
        Write-Host "   ‚úÖ private-images (privado)" -ForegroundColor Green
    } else {
        Write-Host "   ‚ùå private-images n√£o encontrado" -ForegroundColor Red
    }
    
    if ($buckets -match "gallery-images") {
        Write-Host "   ‚úÖ gallery-images (p√∫blico)" -ForegroundColor Green
    } else {
        Write-Host "   ‚ùå gallery-images n√£o encontrado" -ForegroundColor Red
    }
} catch {
    Write-Host "‚ùå Erro ao listar buckets" -ForegroundColor Red
}

# Verificar arquivo SQL
if (Test-Path "supabase-image-metadata.sql") {
    Write-Host "‚úÖ Script SQL encontrado: supabase-image-metadata.sql" -ForegroundColor Green
} else {
    Write-Host "‚ùå Script SQL n√£o encontrado" -ForegroundColor Red
}

# Verificar arquivo .env.local
if (Test-Path ".env.local") {
    Write-Host "‚úÖ Arquivo .env.local encontrado" -ForegroundColor Green
    
    $envContent = Get-Content ".env.local"
    $hasSupabaseUrl = $envContent -match "NEXT_PUBLIC_SUPABASE_URL"
    $hasAnonKey = $envContent -match "NEXT_PUBLIC_SUPABASE_ANON_KEY"
    $hasServiceKey = $envContent -match "SUPABASE_SERVICE_ROLE_KEY"
    
    if ($hasSupabaseUrl) {
        Write-Host "   ‚úÖ NEXT_PUBLIC_SUPABASE_URL configurado" -ForegroundColor Green
    } else {
        Write-Host "   ‚ùå NEXT_PUBLIC_SUPABASE_URL n√£o configurado" -ForegroundColor Red
    }
    
    if ($hasAnonKey) {
        Write-Host "   ‚úÖ NEXT_PUBLIC_SUPABASE_ANON_KEY configurado" -ForegroundColor Green
    } else {
        Write-Host "   ‚ùå NEXT_PUBLIC_SUPABASE_ANON_KEY n√£o configurado" -ForegroundColor Red
    }
    
    if ($hasServiceKey) {
        Write-Host "   ‚úÖ SUPABASE_SERVICE_ROLE_KEY configurado" -ForegroundColor Green
    } else {
        Write-Host "   ‚ùå SUPABASE_SERVICE_ROLE_KEY n√£o configurado" -ForegroundColor Red
    }
} else {
    Write-Host "‚ùå Arquivo .env.local n√£o encontrado" -ForegroundColor Red
    Write-Host "Crie o arquivo .env.local com as vari√°veis do Supabase" -ForegroundColor Yellow
}

Write-Host ""
Write-Host "üéØ PR√ìXIMOS PASSOS:" -ForegroundColor Cyan
Write-Host ""
Write-Host "1. Se algum bucket estiver faltando, execute:" -ForegroundColor Yellow
Write-Host "   supabase storage create public-images --public" -ForegroundColor White
Write-Host "   supabase storage create private-images --private" -ForegroundColor White
Write-Host "   supabase storage create gallery-images --public" -ForegroundColor White
Write-Host ""
Write-Host "2. Execute o script SQL no Supabase Dashboard:" -ForegroundColor Yellow
Write-Host "   - V√° para SQL Editor" -ForegroundColor White
Write-Host "   - Cole o conte√∫do de supabase-image-metadata.sql" -ForegroundColor White
Write-Host "   - Execute o script" -ForegroundColor White
Write-Host ""
Write-Host "3. Teste o sistema:" -ForegroundColor Yellow
Write-Host "   npm run dev" -ForegroundColor White
Write-Host "   - Teste upload de foto de perfil" -ForegroundColor White
Write-Host "   - Teste upload de logo de frota" -ForegroundColor White
Write-Host "   - Teste upload de galeria" -ForegroundColor White 